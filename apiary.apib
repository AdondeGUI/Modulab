FORMAT: 1A
HOST: http://52.15.171.47

# Modulab

Modulab is a web app for generating modular lab reports from scratch or from teach specified templates


## Login Group [/login/{email}]

+ Parameters
    + email: "jsmith@gmail.com" (string, required) 

### Check for user's existance [GET]

+ Response 200 (application/json)

        {
            "exists": 1
        }

+ Response 400 (application/json)

        {
            "exists": 0
        }
        
## Login Verification Group [/login/{email}/{password}]

+ Parameters
    + email: "jsmith@gmail.com" (string, required) 
    + password: "p4ssw0rd" (string, required)

### Confirm login information is correct [GET]

+ Response 200 (application/json)

        {
            "correct": 1
        }

+ Response 400 (application/json)

        {
            "correct": 0
        }

## Users Group [/users]

### Get all users [GET]

+ Response 200 (application/json)

        {
            [
                {
                    "first_name": "Bob",
                    "last_name": "Smith",
                    "email": "email@gmail.com",
                    "user_id": 1,
                },
                {
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "email": "jane@gmail.com",
                    "user_id": 4,
                }
            ]
        }

### Create a new user [POST]

+ Request (application/json)

        {
            "first_name": "Jeff",
            "last_name": "Coulter",
            "email": "liame@liamg.moc",
            "password": "passw0rd"
        }

+ Response 201 (application/JSON)

        {
            "details":"User Jeff Coulter created",
        }
        

## Single User Group [/users/{ID}]

+ Parameters
    + ID: "1" (int, required)

### Get a user [GET]

+ Response 200 (application/json)

        {
            [
                {
                    "first_name": "Bob",
                    "last_name": "Smith",
                    "email": "email@gmail.com",
                    "user_id": 1,
                }
            ]
        }

### Update user [PUT]

+ Request (application/JSON)

        {
            "first_name": "Bob",
            "last_name": "Smith",
            "email": "email@gmail.com",
            "password": "newPassw0rd"
        }

+ Response 201 (application/JSON)

        {
            "details":"User 1 updated",
        }

+ Response 404 (application/JSON)

        {
            "details": "User 1 not found"
        }

### Delete user [DELETE]


+ Response 201 (application/JSON)

        {
            "details":"User 1 deleted",
        }

+ Response 404 (application/JSON)

        {
            "details": "User 1 not found"
        }
        
## User Labs Group [/users/{ID}/labs]

### Get all labs for a user[GET]

+ Parameters
    + ID: "1" (int, required)

+ Response 200 (application/json)

        {
            [
                {
                    "title": "Dark Energy Report",
                    "lab_id": 2048,
                    "course_id": 305,
                },
                {
                    "title": "Dark Energy Report",
                    "lab_id": 2048,
                    "course_id": 305,
                }
            ]
        }

+ Response 404 (application/JSON)

        {
            "error": "User 1 not found"
        }

### Create a new lab [POST]

+ Parameters
    + ID: "1" (int, required)

+ Request (application/json)

        {
            "title": "Sample Report 1",
            "course_id": 345,
        }
        
+ Response 404 (application/JSON)

        {
            "error": "User 1 not found"
        }

## Single Lab Group [/users/{ID}/labs/{lab_id}]

+ Parameters
    + ID: "1" (int, required) 
    + lab_id: "1" (int, required)

### Get a lab[GET]
    
+ Response 200 (application/json)

        {
            [
                {
                    "title": "Dark Energy Report",
                    "lab_id": 2048,
                    "course_id": 305,
                }
            ]
        }

+ Response 404 (application/JSON)

        {
            "error": "User 1 or lab 2048 not found"
        }

### Update a lab[PUT]
    
+ Request (application/JSON)

        {
            "title": "New Energy Report",
            "lab_id": 2048,
            "course_id": 305,
        }

+ Response 201 (application/json)

        {
            "details": "User 1 Lab 2048 updated"
        }

+ Response 404 (application/JSON)

        {
            "details": "User 1 or lab 2048 not found"
        }

### Delete a lab[DELETE]

+ Response 201 (application/JSON)

        {
            "details": "User 1 Lab 2048 deleted"
        }

+ Response 404 (application/JSON)

        {
            "details": "User 1 or lab 2048 not found"
        }
        

## Lab Modules Group [/labs/{lab_id}/modules]

+ Parameters
    + lab_id: "1" (int, required)

### Get all modules for a lab[GET]
    
+ Response 200 (application/json)

        {
            [
                {
                    "module_id": 27,
                    "lab_id": 2048,
                    "type": "text",
                    "data": {"Sample text my guy"}
                },
                {
                    "module_id": 89,
                    "lab_id": 345,
                    "type": "table",
                    "data": {
                        "rows": 2,
                        "cols": 2,
                        "data": "header1 header2 dp1 dp2 dp3 dp4"
                    } 
                },
            ]
        }

+ Response 404 (application/JSON)

        {
            "error": "User 1 or lab 2048 not found"
        }
        
### Update a module on a lab[POST]

+ Request (application/JSON)

        {
            [
                {
                    "type": "text",
                    "data": {"Sample text my guy"}
                }
            ]
        }

+ Response 201 (application/JSON)

        {
            "details":"Module created for Lab 345",
        }

## Courses Group [/courses]

### Create a new course[POST]

+ Request (application/JSON)

        {
            "course_id": 
            "type": "text",
            "data": {"Sample text my guy"}
        }

+ Response 201 (application/JSON)

        {
            "details":"Module created for Lab 345",
        }

## Single Course Group [/courses/{ID}]

+ Parameters
    + ID: "1" (int, required)

### Get all courses for a user ID[GET]
    
+ Response 200 (application/json)

        {
            [
                {
                    "ID": 27,
                    "course_id": 2048,
                    "title": "Painting",
                    "instructor": "Bob Ross"
                },
                {
                    "ID": 27,
                    "course_id": 2048,
                    "title": "Painting",
                    "instructor": "Bob Ross"
                }
            ]
        }

+ Response 404 (application/json)

        {
            "details": "ID not found"
        }
        
### Delete all courses for a user ID[DELETE]

+ Response 201 (application/json)

        {
            "details": "Courses for ID 2 deleted"
        }
        
+ Response 404 (application/json)

        {
            "details": "ID 2 not found"
        }

## User Courses Group [/courses/{ID}/{course_id}]

+ Parameters
    + ID: "1" (int, required)
    + course_id: "345" (int, required)

### Get all courses for a user [GET]

+ Response 200 (application/json)

        {
            [
                {
                    "ID": 27,
                    "course_id": 2048,
                    "title": "Painting",
                    "instructor": "Bob Ross"
                }
            ]
        }

+ Response 404 (application/json)

        { 
            "details": "ID 27 or course_id 2048 not found"
        }

### Delete all courses for a user [DELETE]

+ Response 201 (application/json)

        {
            "details": "Course id 2048 for ID 2 deleted"
        }
        
+ Response 404 (application/json)

        {
            "details": "ID 27 or course_id 2048 not found"
        }

## User Single Course Group [/courses/classes/{course_id}]

+ Parameters
    + course_id: "345" (int, required)
    
### Get a specific course for a user [GET]

+ Response 200 (application/json)

        {
            [
                {
                    "ID": 27,
                    "course_id": 2048,
                    "title": "Painting",
                    "instructor": "Bob Ross"
                }
            ]
        }

+ Response 404 (application/json)

        { 
            "details": "course_id 2048 not found"
        }

### Delete a specific course for a user[DELETE]

+ Response 201 (application/json)

        {
            "details": "Course id 2048 deleted"
        }
        
+ Response 404 (application/json)

        {
            "details": "Course_id 2048 not found"
        }

## Single Module Group [/labs/{lab_id}/modules/{module_id}]

+ Parameters
    + lab_id: "2048" (int, required)
    + module_id: "345" (int, required)
    
### Get a module [GET]

+ Response 200 (application/json)

        {
            [
                {
                    "module_id": 27,
                    "lab_id": 2048,
                    "type": "text",
                    "data": {"Sample text my guy"}
                }
        }
        
+ Response 404 (application/json)

        {
            "details": "lab_id 2048 or module_id 27 not found"
        }

### Update a module [PUT]

+ Request (application/json)

        {
            "module_id": 27,
            "lab_id": 2048,
            "type": "text",
            "data": {"Sample text my guy"}
        }

+ Response 201 (application/json)

        {
            "details": "lab_id 2048 or module_id 27 deleted"
        }
        
+ Response 404 (application/json)

        {
            "details": "lab_id 2048 or module_id 27 not found"
        }

### Delete a module [DELETE]

+ Response 201 (application/json)

        {
            "details": "lab_id 2048 or module_id 27 deleted"
        }
        
+ Response 404 (application/json)

        {
            "details": "lab_id 2048 or module_id 27 not found"
        }